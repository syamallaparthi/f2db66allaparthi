extends layout 
 
block content 
  h1= title 

  if (toShow == null) 
    h2 No instance to Update View 
   
  else
    - let id = toShow._id 
    - let Category = toShow.Category 
    - let Color = toShow.Color 
    - let Quantity = toShow.Quantity 
   
    div.row(class='mb-2 d-flex justify-content-center p-2  text-center text-danger') 
        div.mr-1(style='font-family: cursive;color:purple') ID is 
        div #{id} 
    - let actionid = "/resource/fuels/" + id 
    form(id='FuelForm', action= actionid, method="PUT", class='justify-content-center p-3 text-center text-dark') 
        div.form-group 
            label.fuelAttr(for='Category', style='font-family: cursive;color:purple') Fuel Category 
            input#Category(type='text', name='Category', value= Category ) 
        div.form-group 
            label.fuelAttr(for='Color', style='font-family: cursive;color:purple') Fuel Color 
            input#Color(type='text', name='Color', value= Color ) 
        div.form-group 
            label.fuelAttr(for='Quantity', style='font-family: cursive;color:purple') Fuel Quantity 
            input#Quantity(type='number', name='Quantity', value= Quantity ) 
        br
        br

        input(type="submit", class="btn btn-success") 
 
  script. 
    document.forms['FuelForm'].addEventListener('submit', (event) => { 
      event.preventDefault(); 
      // TODO do something here to show user that form is being submitted 
      fetch(event.target.action, { 
        method: 'PUT', 
        body: new URLSearchParams(new FormData(event.target)) // event.target is the form 
      }).then((resp) => { 
        return resp.json(); // or resp.text() or whatever the server sends 
      }).then((body) => { 
        alert("Update succeded") 
        // TODO handle body 
      }).catch((error) => { 
        // TODO handle error 
        alert("Update failed " + error ) 
      }); 
    }); 
 